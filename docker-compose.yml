version: '3.8'

services:
  # PostgreSQL Database
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    container_name: lims-db
    environment:
      POSTGRES_DB: lims_db
      POSTGRES_USER: lims_user
      POSTGRES_PASSWORD: lims_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - lims-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lims_user -d lims_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lims-backend
    environment:
      DATABASE_URL: postgresql://lims_user:lims_password@db:5432/lims_db
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: lims_db
      DB_USER: lims_user
      DB_PASSWORD: lims_password
      JWT_SECRET_KEY: your-secret-key-change-in-production
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      DEBUG: "True"
      ENVIRONMENT: development
    ports:
      - "8000:8000"
    networks:
      - lims-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lims-frontend
    ports:
      - "3000:3000"
    networks:
      - lims-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  lims-network:
    driver: bridge
